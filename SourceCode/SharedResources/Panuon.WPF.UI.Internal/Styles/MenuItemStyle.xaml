<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:pw="https://opensource.panuon.com/wpf"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <pw:SharedResourceDictionary Source="pack://application:,,,/Panuon.WPF.UI;component/Templates/MenuItemTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Static irs:StyleKeys.InternalMenuItemStyle}"
           TargetType="MenuItem">
        <Setter Property="i:VisualStateHelper.Regist"
                Value="True" />
        <Setter Property="i:VisualStateHelper.IsHover"
                Value="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Path=(i:VisualStateHelper.Foreground) ,RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Margin"
                Value="{Binding Path=(local:IconHelper.Margin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Width"
                Value="{Binding Path=(local:IconHelper.Width), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Height"
                Value="{Binding Path=(local:IconHelper.Height), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.VerticalAlignment"
                Value="{Binding Path=(local:IconHelper.VerticalAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.HorizontalAlignment"
                Value="{Binding Path=(local:IconHelper.HorizontalAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.MinWidth"
                Value="{Binding Path=(local:IconHelper.MinWidth), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.MinHeight"
                Value="{Binding Path=(local:IconHelper.MinHeight), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.MaxWidth"
                Value="{Binding Path=(local:IconHelper.MaxWidth), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.MaxHeight"
                Value="{Binding Path=(local:IconHelper.MaxHeight), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding Path=(local:IconHelper.FontSize), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.FontFamily"
                Value="{Binding Path=(local:IconHelper.FontFamily), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
        <Setter Property="FocusVisualStyle"
                Value="{Binding FocusVisualStyle, Source={x:Static local:GlobalSettings.Setting}}" />
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="local:MenuItemHelper.CornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsSeparatorBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsSeparatorThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorMargin"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsSeparatorMargin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorVisibility"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsSeparatorVisibility), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBackground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverForeground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBackground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedForeground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBackground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickForeground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBackground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedForeground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Padding"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsPadding), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Margin"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsMargin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Icon"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsIcon), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Background"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="BorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Height"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHeight), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Width"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsWidth), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsVerticalContentAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHorizontalContentAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:TemplateKeys.MenuItemTopLevelTemplate}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="local:MenuItemHelper.CornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsSeparatorBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsSeparatorThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorMargin"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsSeparatorMargin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorVisibility"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsSeparatorVisibility), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBackground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverForeground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHoverCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBackground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedForeground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsCheckedCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBackground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickForeground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsClickCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBackground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedForeground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsOpenedCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Padding"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsPadding), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Margin"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsMargin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Icon"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsIcon), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Background"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="BorderThickness"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Height"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHeight), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Width"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsWidth), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsVerticalContentAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=(local:MenuHelper.TopLevelItemsHorizontalContentAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:TemplateKeys.MenuItemTopLevelTemplate}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="local:MenuItemHelper.CornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsSeparatorBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsSeparatorThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorMargin"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsSeparatorMargin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorVisibility"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsSeparatorVisibility), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBackground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverForeground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBackground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedForeground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBackground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickForeground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBackground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedForeground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Padding"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsPadding), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Margin"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsMargin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Icon"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsIcon), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Background"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="BorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Height"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHeight), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Width"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsWidth), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsVerticalContentAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHorizontalContentAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:TemplateKeys.MenuItemSubmenuTemplate}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="local:MenuItemHelper.CornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsSeparatorBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsSeparatorThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorMargin"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsSeparatorMargin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.SeparatorVisibility"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsSeparatorVisibility), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBackground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverForeground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.HoverCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHoverCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBackground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedForeground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.CheckedCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsCheckedCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBackground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickForeground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.ClickCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsClickCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBackground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedForeground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedBorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="local:MenuItemHelper.OpenedCornerRadius"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsOpenedCornerRadius), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Padding"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsPadding), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Margin"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsMargin), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Icon"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsIcon), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Background"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsBackground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsForeground), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsBorderBrush), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="BorderThickness"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsBorderThickness), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Height"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHeight), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Width"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsWidth), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsVerticalContentAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=(local:MenuHelper.SubmenuItemsHorizontalContentAlignment), RelativeSource={RelativeSource AncestorType=Menu}, Mode=OneWay}" />
                <Setter Property="Template"
                        Value="{StaticResource {x:Static irs:TemplateKeys.MenuItemSubmenuTemplate}}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{Binding DisabledOpacity, Source={x:Static local:GlobalSettings.Setting}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.IsChecked"
                        Value="True" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsCheckable, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedBorderBrush), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBorderBrushLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsCheckable, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedBorderThickness), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBorderThicknessLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsCheckable, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedCornerRadius), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverCornerRadiusLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsCheckable, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedBackground), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBackgroundLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsCheckable, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.CheckedForeground), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverForegroundLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.OpenedBorderBrush), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBorderBrushLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.OpenedBorderThickness), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBorderThicknessLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.OpenedCornerRadius), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverCornerRadiusLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.OpenedBackground), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverBackgroundLock"
                        Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:MenuItemHelper.OpenedForeground), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="i:VisualStateHelper.HoverForegroundLock"
                        Value="True" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static rs:StyleKeys.MenuItemStyle}"
           TargetType="MenuItem"
           BasedOn="{StaticResource {x:Static irs:StyleKeys.InternalMenuItemStyle}}">
        <Setter Property="ItemContainerStyle"
                Value="{Binding ItemContainerStyle, RelativeSource={RelativeSource AncestorType=MenuBase}, Mode=OneWay}" />
    </Style>

</ResourceDictionary>
